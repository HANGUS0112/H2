% scaleの処理をここに入れることにした
%by shirayama 20230709
clear;
%% *******************INPUTS FROM THE RESEARCHER***************

%input the correct folder name. The folder name must be same as general file name
filename = [''];

%input the serial number of the final experiment
ini_exp =1;
end_exp =1;

%separate each 3 points
distance_separate=200; %三点間の最短距離のピクセル数


%==========================================================================
for exp=ini_exp :end_exp
    disp(['====' num2str(exp) '===='])
    %==== scale sequence ====
    scale_chack=1;
    scale_data_exist=1;
    while scale_data_exist==1
        answer2=questdlg('Use existing analysis data? or Analyze newly?','scale data analysis','Analyze newly','Use existind data','Use existind data');
        switch answer2
            case 'Analyze newly'
                file = fullfile(filename,num2str(exp), [filename '_sch_' num2str(exp) '_00000.tif']);
                disp('scale is being processed...')
                imscale_original = imread(file);
                imscale= imread(file);
                imscale = imbinarize(imscale,graythresh(imscale)*0.5);
                imscale = bwareaopen(imscale,1000);%originally 1000
                se = strel('disk', 1000); %originally 50
                imscale = imclose(imscale, se);
                imscale = imfill(imscale, 'holes');
                imscale=im2uint8(imscale);
                imscale_original=im2uint8(imscale_original);
                BWoutline_original = bwperim(imscale);
                scale_data_exist=0;

                %----解像度の確認
                [numRows,numCols] = size(imscale);
                if numRows==numCols
                    Rez=numRows;
                else
                    msgbox("解像度が縦横で一致しないよ")
                    return
                end
                %----
                
                Bw=zeros(Rez:Rez);
                Bw=im2uint8(Bw);

                while scale_chack==1
                    %---- find the center of scale circle 
                    %上で縁取られた点をランダムに3つ選び円を描く
                    %select three points at random from the ones marked above and draw a circle
                    
                    imscale_try=imscale_original;
                    ind=find(BWoutline_original==1);
                    r=randperm(length(ind),3);
                    [row,col]=ind2sub(size(BWoutline_original),ind(r));
                    x = row;
                    y = col;
                                
                    x1=x(1);
                    y1=y(1);
                    x2=x(2);
                    y2=y(2);
                    x3=x(3);
                    y3=y(3);

                    if ((x1-x2)^2+(y1-y2)^2)^0.5>distance_separate && ((x2-x3)^2+(y2-y3)^2)^0.5>distance_separate && ((x3-x1)^2+(y3-y1)^2)^0.5>distance_separate   %選んだ3点が200pixcel以上離れているとき
                                
                        x_offset=x1;
                        y_offset=y1;
                    
                        %---- x1,y1を原点に移るように残りの点を移す（計算が面倒だったから）
                    
                        x2=x2-x_offset;
                        y2=y2-y_offset;
                        x3=x3-x_offset;
                        y3=y3-y_offset;
                        
                        %---- 原点,x2,y2,x3,y3(移動後)で円の中心と半径を調べる
                        
                        %----      y3(x2^2+y2^2)-y2(x3^2+y3^2)
                        %---- a= --------------------------------
                        %----             2(x2y3-x3y2)

                        %----     x3^2+Y3^2-2X3a
                        %---- b= ----------------
                        %----         2Y3

                        a=(y3*(x2^2+y2^2)-y2*(x3^2+y3^2))/(2*(x2*y3-x3*y2));
                        b=(x3^2+y3^2-2*x3*a)/(2*y3);
                        r=(a^2+b^2)^0.5;
                    
                        %---- もとの位置に戻す
                    
                        x2=x2+x_offset;
                        y2=y2+y_offset;
                        x3=x3+x_offset;
                        y3=y3+y_offset;
                        a=a+x_offset;
                        b=b+y_offset;
                        disp(['scale radius ' num2str(r) ' pixcel'])
                        
                        imscale=zeros(Rez,Rez);
                        for q=1:Rez
                            for z=1:Rez
                                if (q-a)^2+(z-b)^2<r^2
                                    imscale(q,z)=1;
                                end
                            end
                        end
                        BWoutline = bwperim(imscale);
                        figure(1),imshow(imscale_original),title('Original Scale Image')
                    
                        % 円を描くのに使った点をscale_originalに直接半径100pixcel程度で白くぬる
                        for q=1:Rez
                            for z=1:Rez
                                if (q-x1)^2+(z-y1)^2<100
                                    imscale_try(q,z)=255;
                                end
                            end
                        end
                        for q=1:Rez
                            for z=1:Rez
                                if (q-x2)^2+(z-y2)^2<100
                                    imscale_try(q,z)=255;
                                end
                            end
                        end
                        for q=1:Rez
                            for z=1:Rez
                                if (q-x3)^2+(z-y3)^2<100
                                    imscale_try(q,z)=255;
                                end
                            end
                        end
                        Segout = imscale_try;
                        Segout(BWoutline) = 255;
                        Segout(BWoutline_original)=230;
                        figure(2),imshow(Segout),title('Outlined Scale Image and Border and original')
                        answer3=questdlg('Does the photo and scale match? スケールはどう？','SCALE CHECK','Yes','No','No');
                        switch answer3
                            case 'Yes'
                                scale_chack=0;
    
                                fullname = fullfile(filename,num2str(exp), ['Scale_compare' num2str(exp) '.tif']);
                                saveas(figure(2),fullname)
    
                                fullname = fullfile(filename,num2str(exp), ['Scale_perfect_circle' num2str(exp) '.tif']);
                                imwrite(imscale,fullname);
                                            
                                file = fullfile(filename,num2str(exp), [filename '_' num2str(exp)]);
                                fullname=fullfile([file '_scale_3points_latest_setup.txt']);
                                fileID=fopen(fullname,"w");
                                fprintf(fileID,'%d',row(1));
                                fprintf(fileID,"\n");
                                fprintf(fileID,'%d',row(2));
                                fprintf(fileID,"\n");
                                fprintf(fileID,'%d',row(3));
                                fprintf(fileID,"\n");
                                fprintf(fileID,'%d',col(1));
                                fprintf(fileID,"\n");
                                fprintf(fileID,'%d',col(2));
                                fprintf(fileID,"\n");
                                fprintf(fileID,'%d',col(3));
                                fprintf(fileID,"\n");
                            case 'No'
                                scale_chack=1;
                        end
                    end
                end
            case 'Use existind data'
                file = fullfile(filename,num2str(exp), ['Scale_perfect_circle' num2str(exp) '.tif']);
                oo=isfile(file);
                if oo==1
                    scale_data_exist=0;
                else
                    warndlg('not exist the last analysys Scale perfect circle data','Warning')
                end
        end 
    end
end    
disp '************************* END ***************************'
